
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Движения.КоличествоТоваров.Записывать = Истина;
	Движения.ПродажиПоФилиалам.Записывать = Истина;
	
	Для Каждого ТекСтрокаПереченьТоваров Из ПереченьТоваров Цикл
	// регистр КоличествоТоваров Расход
		Движение = Движения.КоличествоТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаПереченьТоваров.Товар;
		Движение.Филиал = Филиал;
		Движение.Количество = ТекСтрокаПереченьТоваров.Количество;
	// регистр ПродажиПоФилиалам 
		Движение = Движения.ПродажиПоФилиалам.Добавить();
		Движение.Период = Дата;
		Движение.Филиал = Филиал;
		Движение.Менеджер = Менеджер;
		Движение.Сумма = ТекСтрокаПереченьТоваров.Сумма;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		// Заполнение шапки
		Менеджер = ДанныеЗаполнения.Менеджер;
		Филиал = ДанныеЗаполнения.Филиал;
		Фирма = ДанныеЗаполнения.Фирма;
		Для Каждого ТекСтрокаПереченьТоваров Из ДанныеЗаполнения.ПереченьТоваров Цикл
			НоваяСтрока = ПереченьТоваров.Добавить();
			НоваяСтрока.Количество = ТекСтрокаПереченьТоваров.Количество;
			НоваяСтрока.Сумма = ТекСтрокаПереченьТоваров.Сумма;
			НоваяСтрока.Товар = ТекСтрокаПереченьТоваров.Товар;
			НоваяСтрока.Цена = ТекСтрокаПереченьТоваров.Цена;
		КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
